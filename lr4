#include "mpi.h"
#include <stdio.h>
int main (int argc, char * argv [])
{
 int лічильник, повідомлення, myid, numprocs, сервер;
 int color, remote_leader_rank, i, ICTAG = 0;
 Статус MPI_Status; 
 MPI_Comm oldcommdup, splitcomm, oldcomm, inter_comm;
 MPI_Init (& argc, & argv);
 oldcomm = MPI_COMM_WORLD;
 MPI_Comm_dup (oldcomm, & oldcommdup);
 MPI_Comm_size (oldcommdup, & numprocs);
 MPI_Comm_rank (oldcommdup, & myid);
 сервер = numprocs-1;
 color = (сервер myid ==);
 MPI_Comm_split (oldcomm, color, myid та splitcomm);
 if (! color) {
 remote_leader_rank = сервер; 
 }
 ще {
 remote_leader_rank = 0;
 }
 MPI_Intercomm_create (splitcomm, 0, oldcommdup,
remote_leader_rank, ICTAG та & inter_comm);
 MPI_Comm_free (& oldcommdup);
 якщо (myid == сервер) {
 для (i = 0; i <сервер; i ++) {
 MPI_Recv (& повідомлення, 1, MPI_INT, i, MPI_ANY_TAG,
inter_comm, & status);
 printf ("Ранг процесу% я отримав% i від% i \ n",
myid, повідомлення, статус.MPI_SOURCE);
 }
 }
 ще {
 лічильник = мійд;
 MPI_Send (& лічильник, 1, MPI_INT, 0, 0, inter_comm);
 printf ("Ранг процесу% я надсилаю% i \ n", myid, counter);
 }
 MPI_Comm_free (& inter_comm);
 MPI_Finalize ();
} 
